:py:mod:`src.utils`
===================

.. py:module:: src.utils


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   src.utils.bitmap2file
   src.utils.get_semantic_bitmap
   src.utils.export_dataset
   src.utils.load_image_from_url
   src.utils.load_label_bitmap_from_url
   src.utils.load_release
   src.utils.handle_exif_rotation



Attributes
~~~~~~~~~~

.. autoapisummary::

   src.utils.session
   src.utils.adapter


.. py:data:: session
   

   

.. py:data:: adapter
   

   

.. py:function:: bitmap2file(bitmap, is_segmentation_bitmap = True)

   Convert a label bitmap to a file with the proper format.

   :param bitmap: A numpy array where each unique value represents an instance id.

   :returns: a file object.
   :rtype: object


.. py:function:: get_semantic_bitmap(instance_bitmap, annotations, id_increment = 1)

   Convert an instance bitmap and annotations dict into a segmentation bitmap.

   :param instance_bitmap: A numpy array where each unique value represents an instance id.
   :param annotations: An annotations dictionary.
   :param id_increment: Increment the category ids with this number. Defaults to 1.

   :returns: A numpy array where each unique value represents a category id.


.. py:function:: export_dataset(dataset, export_folder = '.', export_format = 'coco-panoptic', id_increment = 1)

   Export a dataset to a different format.

   :param dataset: A dataset object, resulting from client.get_dataset().
   :param export_folder: The folder to export the dataset to. Defaults to '.'.
   :param export_format: The destination format. Can be 'coco-panoptic' (default), 'coco-instance', 'yolo', 'instance', 'instance-color', 'semantic', 'semantic-color'.
   :param id_increment: Increment the category ids with this number. Defaults to 1. Ignored unless export_format is 'semantic' or 'semantic-color'.


.. py:function:: load_image_from_url(url, save_filename = None)

   Load an image from url.

   :param url: The image url.
   :param save_filename: The filename to save to.

   :returns: A PIL image.


.. py:function:: load_label_bitmap_from_url(url, save_filename = None)

   Load a label bitmap from url.

   :param url: The label bitmap url.
   :param save_filename: The filename to save to.

   :returns: A numpy np.uint32 array.


.. py:function:: load_release(release)


.. py:function:: handle_exif_rotation(image)


